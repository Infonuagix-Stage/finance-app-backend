name: Backend CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:  # Permet un déclenchement manuel

jobs:
  build:
    runs-on: ubuntu-latest
    
    # Définition des variables d'environnement à partir des secrets
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      AUTH0_AUDIENCE : ${{ secrets.AUTH0_AUDIENCE }}
      AUTH0_M2M_CLIENT_ID : ${{ secrets.AUTH0_M2M_CLIENT_ID }}
      AUTH0_M2M_CLIENT_SECRET : ${{ secrets.AUTH0_M2M_CLIENT_SECRET }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Verify Java version
        run: java -version

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build with Maven
        run: mvn clean install
        working-directory: .

      # Si vos tests ne sont pas déjà inclus dans "mvn clean install", laissez cette étape :
      - name: Run tests
        run: mvn test
        working-directory: .

      - name: Convert repository name to lowercase
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Docker Build and Push
        run: |
          docker build -t ghcr.io/${{ env.REPO_NAME }}:latest .
          echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/${{ env.REPO_NAME }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Installer le Railway CLI
        run: |
          curl -sSL https://railway.app/install.sh | sh
          echo "$HOME/.railway/bin" >> $GITHUB_PATH

      - name: Déployer sur Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          # Commande de déploiement Railway (adaptée à votre config)
          railway up --service backend --detach
